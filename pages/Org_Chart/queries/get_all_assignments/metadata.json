{
  "gitSyncId": "688f7c8487c169738493a99c_295a73c4-d214-43d8-bc45-5efac57858a6",
  "id": "Org_Chart_get_all_assignments",
  "pluginId": "graphql-plugin",
  "pluginType": "API",
  "unpublishedAction": {
    "actionConfiguration": {
      "autoGeneratedHeaders": [],
      "body": "query GetEmployeesInWorkgroupWithCorrectCount(\n  $where: people_assignment_v0_bool_exp!,\n  $limit: Int!,\n  $offset: Int!,\n) {\n\tpeople_assignment_v0_aggregate(where: $where) {\n    aggregate {\n      count\n    }\n  }\n  people_assignment_v0(where: $where, limit: $limit, offset: $offset\n) {\n    FestCloudID\n    EmployeeFestCloudID\n    PositionFestCloudID\n    WorkgroupFestCloudID\n\t\tassignment_positionfestcloudid_position {\n      PositionName\n    }\n\t\tassignment_workgroupfestcloudid_workgroup {\n      StructureType\n    }\n    assignment_employeefestcloudid_employee {\n      FestCloudID\n      PhotoLink\n      Stage\n      employee_festcloudid_person {\n        Name\n        FamilyName\n        MiddleName\n        person_festcloudid_principal {\n          WorkEmail: contact_principalfestcloudid_array(\n            where: { EmailType: { _eq: \"Work\" } },\n            distinct_on: Email\n          ) {\n            Email\n            FestCloudID\n          }\n          WorkPhone: contact_principalfestcloudid_array(\n            where: { PhoneType: { _eq: \"Work\" } },\n            distinct_on: PhoneNumber\n          ) {\n            PhoneNumber\n            FestCloudID\n          }\n          PersonalEmail: contact_principalfestcloudid_array(\n            where: { EmailType: { _eq: \"Personal\" } },\n            distinct_on: Email\n          ) {\n            Email\n            FestCloudID\n          }\n          PersonalPhone: contact_principalfestcloudid_array(\n            where: { PhoneType: { _eq: \"Personal\" } },\n            distinct_on: PhoneNumber\n          ) {\n            PhoneNumber\n            FestCloudID\n          }\n        }\n      }\n    }\n\t\tassignment_festcloudid_assignmentext{\n      Stage\n    }\n  }\n}",
      "encodeParamsToggle": true,
      "formData": {
        "apiContentType": "application/json"
      },
      "headers": [
        {
          "key": "Authorization",
          "value": "Bearer {{appsmith.store.accessToken}}"
        },
        {
          "key": "X-Hasura-Role",
          "value": "{{SecurityService.getRoleByPermission(SecurityService.permissions.assignment_view)}}"
        }
      ],
      "httpMethod": "POST",
      "httpVersion": "HTTP11",
      "paginationType": "NONE",
      "path": "",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        },
        {
          "value": "{\n\t\"where\": {{ {\n\t\t...(Workgroup_Tree.checked && Workgroup_Tree.checked.length > 0 \n\t\t\t\t? { WorkgroupFestCloudID: { _in: (Workgroup_Tree.checked.length > 0 ? Workgroup_Tree.checked : '') } }\n\t\t\t\t: {}),\n\t\tassignment_employeefestcloudid_employee: {\n\t\t\temployee_festcloudid_person: {\n\t\t\t\t_or: [\n\t\t\t\t\t{ Name: { _ilike:  \"%\" + (InputSearch.text || \"\") + \"%\" } },\n\t\t\t\t\t{ FamilyName: { _ilike:  \"%\" + (InputSearch.text || \"\") + \"%\" } },\n\t\t\t\t\t{\n\t\t\t\t\t\t_and: [\n\t\t\t\t\t\t\t{ Name: { _ilike: InputSearch.text && InputSearch.text.split(\" \").length > 0 \n\t\t\t\t\t\t\t\t\t\t\t ? \"%\" + InputSearch.text.split(\" \")[0] + \"%\" \n\t\t\t\t\t\t\t\t\t\t\t : \"%%\"  } },\n\t\t\t\t\t\t\t{ FamilyName: { _ilike: InputSearch.text && InputSearch.text.split(\" \").length > 1 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t ? \"%\" + InputSearch.text.split(\" \")[1] + \"%\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t : \"%%\"  } }\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_and: [\n\t\t\t\t\t\t\t{ FamilyName: { _ilike: InputSearch.text && InputSearch.text.split(\" \").length > 0 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t ? \"%\" + InputSearch.text.split(\" \")[0] + \"%\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t : \"%%\"  } },\n\t\t\t\t\t\t\t{ Name: { _ilike: InputSearch.text && InputSearch.text.split(\" \").length > 1 \n\t\t\t\t\t\t\t\t\t\t\t ? \"%\" + InputSearch.text.split(\" \")[1] + \"%\" \n\t\t\t\t\t\t\t\t\t\t\t : \"%%\"  } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\tassignment_festcloudid_assignmentext: {\n\t\t\t_and: [\n\t\t\t\t{ Stage: { _in: FilterButton1?.selectedValues?.length > 0 ? FilterButton1.selectedValues : utils.stages}},\n\t\t\t\t{ Stage: { _nilike: \"ex-%\" } },\n\t\t\t]\n\t\t}\n\t}\n\t}},\n\t\"limit\": {{ assigneesList.pageSize }},\n\t\"offset\": {{ (assigneesList.pageNo - 1) * assigneesList.pageSize }},\n}"
        },
        {
          "value": {}
        }
      ],
      "queryParameters": [],
      "timeoutInMillisecond": 20000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "datasourceConfiguration": {
        "url": "https://hasura-uat.srv.festcloud.ai/v1/graphql"
      },
      "isAutoGenerated": false,
      "name": "DEFAULT_REST_DATASOURCE",
      "pluginId": "graphql-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "headers[1].value"
      },
      {
        "key": "pluginSpecifiedTemplates[1].value"
      },
      {
        "key": "headers[0].value"
      }
    ],
    "executeOnLoad": true,
    "name": "get_all_assignments",
    "pageId": "Org_Chart",
    "userSetOnLoad": true
  }
}